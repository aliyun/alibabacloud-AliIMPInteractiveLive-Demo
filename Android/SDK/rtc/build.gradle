apply plugin: 'com.android.library'
apply from: 'https://paas-sdk.oss-cn-shanghai.aliyuncs.com/paas/room/android/release/config/config.gradle'

buildscript {
    repositories {
        mavenLocal()
        jcenter()
        google()
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/releases' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.0.2'
        //引入其他的插件
        classpath 'digital.wup:android-maven-publish:3.4.0'
    }
}

apply plugin: 'digital.wup.android-maven-publish'
apply from: 'https://paas-sdk.oss-cn-shanghai.aliyuncs.com/paas/room/android/release/config/publish.gradle'

task wrapper(type: Wrapper) {
    gradleVersion = '3.3'
    distributionUrl = 'https://services.gradle.org/distributions/gradle-3.3-bin.zip'
}

android {
    compileSdkVersion 31
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 1
        versionName "${VER}"

        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    android {
        lintOptions {
            abortOnError false
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.aar"])
    compileOnly 'com.android.support:support-annotations:28.0.0'
    compileOnly "com.alibaba:fastjson:${getProperty('version.fastjson')}"

    api "com.aliyun.rtc:AliRTC-Full:2.5.7.0.22011719573410@aar"

    if (shouldLoadLocalDepFun()) {
        compileOnly project(':base')
        compileOnly project(':player')
        api project(':beauty_base')
    } else {
        compileOnly("${GROUP}:${PREFIX}base:${VER}${SUFFIX}") { changing = true }
        compileOnly("${GROUP}:${PREFIX}player:${VER}${SUFFIX}") { changing = true }
        compileOnly("${GROUP}:${PREFIX}app-release:${VER}${SUFFIX}") { changing = true }
        api("${GROUP}:${PREFIX}beauty_base:${VER}${SUFFIX}") { changing = true }
    }
}