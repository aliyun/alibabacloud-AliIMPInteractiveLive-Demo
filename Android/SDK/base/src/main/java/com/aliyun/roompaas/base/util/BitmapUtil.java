package com.aliyun.roompaas.base.util;import android.graphics.Bitmap;import android.graphics.BitmapFactory;import android.support.annotation.WorkerThread;import java.io.FileInputStream;import java.io.IOException;import java.io.InputStream;import java.util.HashMap;import java.util.Map;/** * Created by KyleCe on 2022/6/14 */public class BitmapUtil {    private static Map<String, Bitmap> sBmpCache = new HashMap();    @WorkerThread    public static Bitmap decodeBitmap(String fileName) {        Bitmap bitmap = sBmpCache.get(fileName);        if (bitmap == null || bitmap.isRecycled()) {            InputStream is = null;            try {                is = new FileInputStream(fileName);                bitmap = BitmapFactory.decodeStream(is);                sBmpCache.put(fileName, bitmap);            } catch (IOException e) {                e.printStackTrace();            } finally {                IOUtil.close(is);            }        }        return bitmap;    }    public static void recycle(String fileName) {        Bitmap bitmap = sBmpCache.get(fileName);        int result = recycle(bitmap);        if (result != -1) {            sBmpCache.remove(fileName);        }    }    public static int recycle(Bitmap bitmap) {        if (bitmap != null && !bitmap.isRecycled()) {            bitmap.recycle();            return 0;        }        return -1;    }    public static void clearCache() {        for (Map.Entry<String, Bitmap> entry : sBmpCache.entrySet()) {            recycle(entry.getValue());        }        Utils.clear(sBmpCache);    }}