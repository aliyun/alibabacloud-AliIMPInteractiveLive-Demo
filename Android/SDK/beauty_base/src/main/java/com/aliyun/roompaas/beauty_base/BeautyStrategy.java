package com.aliyun.roompaas.beauty_base;import android.content.Context;import android.support.annotation.Nullable;import android.view.View;import android.view.ViewGroup;import com.aliyun.roompaas.base.IClear;import com.aliyun.roompaas.base.cloudconfig.CloudConfigCenter;import com.aliyun.roompaas.base.log.Logger;import com.aliyun.roompaas.base.util.Utils;import java.lang.ref.Reference;import java.lang.ref.WeakReference;/** * Created by KyleCe on 2022/3/15 */public enum BeautyStrategy implements IClear {    INSTANCE;    public static final String TAG = "BeautyStrategy";    private Reference<View> viewRef;    public boolean isBeautyInvalid() {        Class<?> beautyImplClz = BeautyCompat.forValidBeautyImpl();        if (beautyImplClz != null) {            Logger.i(TAG, "isBeautyInvalid: " + beautyImplClz);            return false;        }        Logger.i(TAG, "isBeautyInvalid: " + true);        return true;    }    @SuppressWarnings("unchecked")    public void setUp(ViewGroup vg) {        setUp(vg, null);    }    public void setUp(ViewGroup vg, @Nullable IBeautyOptUpdate update) {        Context context;        if (!CloudConfigCenter.getInstance().enableBeautify()) {            Logger.e(TAG, "setUp: end--Beautify is disableï¼Œopen Beautify first.");            return;        }        if (vg == null || (context = vg.getContext()) == null) {            Logger.e(TAG, "setUp: end--invalid param: " + null);            return;        }        Class<View> view = BeautyCompat.forValidBeautyView();        if (view == null) {            Logger.e(TAG, "setUp: end--invalid param: no valid view class");            return;        }        View target = Utils.getRef(viewRef);        if (target == null) {            try {                View v = view.getConstructor(Context.class).newInstance(context);                if (v instanceof IBeautyOptionHolder && update != null) {                    ((IBeautyOptionHolder) v).setBeautyUpdater(update);                }                target = v;            } catch (Throwable e) {                Logger.e(TAG, "setUp: end--exception: " + e);                return;            }        } else {            if (target.getParent() == vg) {                Logger.e(TAG, "setUp: end--invalid param: already added");                return;            }            BeautyCompat.removeSelfSafely(target);        }        vg.addView(target, new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));        viewRef = new WeakReference<>(target);    }    @Override    public void clear() {        Utils.clear(viewRef);    }}